version: '3'
services:
    api_dev:
        build:
            context: .
            dockerfile: Dockerfile-api
        image: 'zx-backend-challenge-api_dev:latest'
        volumes:
            - '.:${APP_DIRECTORY}'
            - '${APP_DIRECTORY}/node_modules'
        ports:
            - '${API_LOCAL_PORT}:${API_CONTAINER_PORT}'
        command:
            - ./wait-for-it.sh
            - 'db:${DB_CONTAINER_PORT}'
            - '--'
            - npm
            - run
            - serve
        environment:
            - 'API_CONTAINER_PORT=${API_CONTAINER_PORT}'
            - 'DB_CONTAINER_PORT=${DB_CONTAINER_PORT}'
            - 'DB_DATABASE_NAME=${DB_DATABASE_NAME}'
            - 'DATA_POPULATE=${DATA_POPULATE}'
            - 'DB_CONTAINER_HOST=${DB_CONTAINER_HOST}'
            - 'DB_FORCE_DROP_DATABASE=${DB_FORCE_DROP_DATABASE}'
        restart: on-failure
        networks:
            - zx_dev
    doc_dev:
        build:
            context: .
            dockerfile: Dockerfile-doc
        image: 'zx-backend-challenge-doc_dev:latest'
        volumes:
            - './docs:${APP_DIRECTORY}/docs'
            - '${APP_DIRECTORY}/node_modules'
        ports:
            - '${DOC_LOCAL_PORT}:${DOC_CONTAINER_PORT}'
        command:
            - npm
            - run
            - doc
        environment:
            - 'DOC_CONTAINER_PORT=${DOC_CONTAINER_PORT}'
        restart: on-failure
        networks:
            - zx_dev
    db_dev:
        build:
            context: .
            dockerfile: Dockerfile-db
        image: 'zx-backend-challenge-db_dev:latest'
        volumes:
            - 'db-data_dev:/data/db'
        ports:
            - '${DB_LOCAL_PORT}:${DB_CONTAINER_PORT}'
        restart: on-failure
        networks:
            - zx_dev
volumes:
    db-data_dev: null
networks:
    zx_dev:
        driver: bridge
